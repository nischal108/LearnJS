    <<<<<<<<<<<<<<<<<  Words vs keywords >>>>>>>>>>

the word without any meaning for the interpreter is word. (nischal)
the word that has something for the interpreter is keyword.  (for)

                        variables and constant
value change hune ( used for storing data) = variables 
var a = "hello";
var b = "world";
value change nahune = constant
const a = hello;
const b = world;


                     <<<<<    let >>>>>>
let also makes variables 
let a = 12;



<<<<<<<<<<<<<<         hoisting  >>>>>>>>>>>>>>>>>

variables banaunu agadi nei use garna milxa , Js ma 
that is called hoisting
variable and functions are hoisted which means their declaration is moved on the top of the code during execution

var a;         declaration  ( during execution this line goes to the rop of the program that is called hoisting , no matter where it is written it goes to top)
a = 12;           initialization

if a variable is only declared not intialized its value is undefined.
 existence nei nabhako not defined , 
 existence xa value thaxaina undefined


    <<<<<<<<<<<<<    types in js <>>>>>>>>>

            primitives = numbers, string , null, undefined, boolean 
            
            reference = {} () []
                array , haru ani aru kunai pani bracket bhitra ko value a ma assign garer
                b ma a lai assign garda if we chnage b matlab increase garim value bhane a ko value ni badxa
                 a  ko j ho tyo b ko ni ho , saman eutai ho tara duitai ko ho so euta haraye arko ko ni harayo 
                 because saaman tah eutai thyo ni tah 


<<<<<<<<<<<<<<<<    conditionals >>>>>>>>>

                is, else, else if

                syntax = 
                if(){
                    //code
                }
                elseif(){
                    //code
                }
                else{
                    //code
                }



<<<<<<<<<<<<<<  loops >>>>>>>>>>>>>>>>>>>
                  repeat 

                  for    while 

            <<<for>>>
        syntax:
            for(start;end;change){

            }
                
            for(var i = 0; i<11 , i++){
                console.log(i);
            }


    `      <<<while>>>

            var a = 12;
            while(a<20){
                a++;
            }



<<<<<<<<<<<<<<<<<<   functions  >>>>>>>>>

piece of code that is used repeadetly.


<<< declaring function >>>



       function abcd(parameters){
           function statement;
       }  
       


running function

abcd(arguments);


<<<parameters function >>>

 function abcd(a,b,c){
    console.log(a);
    console.log(b);
    console.log(c);
 }

 abcd(4,5,6);


 <<<<<<<<<<<<<<<<<<<<<<<<<<<   arrays   >>>>>>>>>

 euta variable ma same type ko dherai value rakhna

<<<<<< declaring >>>>

 var a = [1,2,3];     -----> This is an array

 a[0];     -----> results 1


 it has 0 indexing, counting starts from 0




 <<<<<<<<<<<<   push pop shift unshift   >>>>>>>>>>>>

var hello = [1, 2, 3 ,4 ]  --> array is made

hello.push(5);      -----> [1, 2, 3, 4, 5]   // last ma value add hunxa

hello.pop(4);       -----> [1, 2, 3]     // last ko value hatxa

hello.unshift(0);    -----> [0, 1, 2, 3, 4]    // suru ma value add hunxa

hello.shift()    -------> [2, 3, 4]   /// suru ko value hatxa
+
hello.splice(2,1)-----> [1, 2, 4]     //( bich bich ko value hatauna) second index ko euta value hatxa
hello.spice(1,2)  -----. [1, 4]    // first index dekhi uta ko 2ta value hato




<<<<<<<<<<<<<<<<<<<    object    >>>>>>>>>>>

more than one element is array.

  object holds the details of one element. {}   denoted object



            <<< blank object >>>

 var a ={};     ---> object



         <<<   filled object  >>>>

 var nischal = {
    age:4,
    email: "nishch@gmail.com",
    contact : 98765567, 
    weight : function hello(){
        //function statements
    }
 }

euta manxe ko barema sabai details (properties techy bhasa ma) aayo so this is an object 
nischal ko properties ma function aayo bhane i.e method
mathi ko weight is a method




<< accessing an details >>

console.log(nischal.age);    ----> results 4



<<   changing tht properties of an object >>
nischal.age = 24;     +   ---> now the calue of age property is changed.







advance

var let and const
 var is from es5 and let and const are from es6 version of js

 var is function scoped meaning function bhitra jaha ni use garda hunxa ekchoti declare bhaye paxi 
 var adds itself to the new window  object
                 after declaring variable if we check the elements inside window we will find our variable there.


 let and const are braces{} scoped bhaneko ekchoti declare bhaye paxi {} matra use hunxa bahira hudain like i we use in conditionals
 let and const doesn't add themselves  to the new window object.
  


<<<<<<<<<<<<<window object bhaneko k ho tah ?>>>>>>>>>>>>>>>>

esto feature jun chai js ko feature haina tara js can use tyo feature haru chai hunxa browser ko window bhanne location ma 
and js is allowed to use it 
famous example is alert("hello world);
this is not a feature of js , document, scroll, setinterval , fetch ni haina 
browser ma conbsole ma gayera window lekhda dekhinx tons of these things



<<<<<<<<<<<<<<<<<<<<<<<<<<<<   browser context api   >>>>>>>>>>
esko under ma aauxa
window
stack
heap memory 


<<<<<<  stack  >>>>>>>>>
stack bhaneko order of pushing and popping data 



<<<<<<<<<<      heap memory   >>>
hamlai chaine intermediate data for the execution of program 
is stored in heap memory 
like for 1+2+3+4+5
1+2 garera 3 aauxa that is store in heap memory for a certaion time


------------<<<<<<<   Execution context   >>>>>>>>>>>------
    yo bhaneko chai euta esto imaginary concept ho about an area ho jun chai function call garda use 
    banaunxa jasma chai  variables hunx function ko, function hunxa aafu bhitra ko (function inside function)
     ra last ma hunxa lexical environment

     <<<<< lexical environment  >>>>
      a lexical environment is like a memory box (container) that stores variables and their values in a programming language.
       When you write code, each variable you create is stored in its own "box" along with its assigned value. This box is called a lexical environment.

    variable haru ko scope haru ko detail store hunxa jastai kun variable kun function ma use garna milxa 
    kun ma mildaina 
    it says what can be  and can't be accessed by and function
    according to this variable of a parent can be used by children but that of children can't be used by parent
    
harek choti function call huda yo environment (execution context) create hunxa


------------------<<<<<<<<<<  copying reference value          >>>>>>>>>>>>>>>--------------------
mathi bhane jastai euta array arko lai ni assign gareko xa bhane we call it referring 
ani euta bata hatauda 2tai bata hatxa
to avoid that we use spread operator(...)

var a = [1,2,3,4];
var b=  a;
 this is referring 
 now lets use spread operator...

 var b = [...a];
 aba chai b ma change gare b ma matrai hunxa a ma hudaina 


 we can also copy objects in this way.
 var b = {...a}



 ------------------<<<<< conditionals   >>>>-------------
 if(-1){

 }
 else{

 }
 the above condition works  this is true, and if works here but how ?

_____________________ js ma j lekhe pani they are either in truthy group or falsy group ____________>
 falsy values =  0 false undefined null NaN(not a number) document.all 
 other all are truthy



------------<<<<<< switch    >>-------
  khasai use hudaina 
switch(1){
    case1:
    break;
    case2:
    break;
    default
}


--------<<<<<<<< foreach , for in,   forof,  do-while,  >>>>>---

------------foreach loop----------

works only in array.
var a=[1, 2, 4, 5, 6, 7,];
foreach makes change in an duplicate of your array but the original array value is same

a.forEach(function(val){         //always function inside for each , this is a function without name , anonymous function
    console.log(val+2)
})


--------------forIn-------
used to do loops i objects

var nischal : {
    name = "nischal,
    age="2"
}
for(var key in nischal){
  console.log(key);           // results name and age  
  console.log(obj[key]);      // results nischal and 2
  console.log(key, obj[key]);      // results mathi ko {} bhitra ko jastai everything 
}

--------------- do while ----------
var a = 12
do{
    console.log("hey");
    a++;
}
while (a<15)

condition wrong nei bhaye ni suru ma ekchoti chai execute hunxa

-------------- call back functions ----------
